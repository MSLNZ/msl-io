[project]
name = "msl-io"
dynamic = ["version"]
dependencies = [
    "numpy",
]
description = "Read and write data files"
license = {file = "LICENSE.txt"}
authors =[
    {name = "Measurement Standards Laboratory of New Zealand", email = "info@measurement.govt.nz"},
]
maintainers = [
    {name = "Joseph Borbely", email = "joseph.borbely@measurement.govt.nz"},
]
requires-python = ">=3.8"
readme = "README.rst"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
]

[project.urls]
Changes = "https://mslnz.github.io/msl-io/latest/release-notes/"
Documentation = "https://mslnz.github.io/msl-io/latest/"
Homepage = "https://mslnz.github.io/msl-io/latest/"
Source = "https://github.com/MSLNZ/msl-io/"
Tracker = "https://github.com/MSLNZ/msl-io/issues"

[project.optional-dependencies]
h5py = [
    "h5py",
]
google = [
    "google-api-python-client",
    "google-auth-httplib2",
    "google-auth-oauthlib",
]

[dependency-groups]
doc = [
    "mike>=2.1.3",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.11",
    "mkdocstrings-python>=1.11.1",
]
lint = [
    "ruff>=0.11.0",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
]
type = [
    "basedpyright>=1.28.1",
    "mypy>=1.14.1",
]
dev = [
    {include-group = "doc"},
    {include-group = "lint"},
    {include-group = "test"},
    {include-group = "type"},
    "msl-io[google,h5py]",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/msl/io/_version.py"

[tool.hatch.build.targets.sdist]
include = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/msl"]

[tool.pytest.ini_options]
cache_dir = ".cache/pytest"
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-config=pyproject.toml",
    "--verbose",
    "--doctest-modules",
    "--doctest-glob=*.rst",
    "--import-mode=importlib",
    "--ignore=src/msl/io/_types.py",
    "--ignore=docs/conf.py",
    "--ignore=tests/create_google_api_tokens.py",
]
consider_namespace_packages = true
doctest_optionflags = "NORMALIZE_WHITESPACE ALLOW_UNICODE ELLIPSIS"

[tool.coverage.run]
data_file = ".cache/coverage/.coverage"
branch = true
omit = [
    "src/msl/io/readers/_xlrd/*",
    "src/msl/io/writers/_py3_json_encoder.py",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "pragma: no branch",
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
]
include_namespace_packages = true

[tool.coverage.html]
directory = ".cache/coverage"
title = "MSL-IO coverage report"

[tool.mypy]
cache_dir = ".cache/mypy"
exclude = [
    "src/msl/io/readers/_xlrd",
]
strict = true
strict_bytes = true

# with the environment variable MYPYPATH=src defined, namespace_packages=true and
# explicit_package_bases=true, the following error goes away
#   Source file found twice under different module names: "io" and "msl.io"
# https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules
namespace_packages = true
explicit_package_bases = true

allow_redefinition = false
allow_untyped_globals = false
disallow_any_decorated = true
disallow_any_explicit = false # true
disallow_any_expr = false # true
disallow_any_unimported = true
ignore_missing_imports = false
implicit_optional = false
local_partial_types = true
scripts_are_modules = true
warn_no_return = true
warn_unreachable = true

[tool.basedpyright]
failOnWarnings = true
typeCheckingMode = "recommended"
useLibraryCodeForTypes = false
exclude = [
    "**/.*",
    "**/__pycache__",
    "**/_version.py",
    "src/msl/io/readers/_xlrd",
]
reportAny = false
reportExplicitAny = false
reportImplicitOverride = false

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
exclude = [
    ".cache",
    ".git",
    ".github",
    ".venv",
    "build",
    "dist",
    "venv",
    "src/msl/io/_version.py",
    "src/msl/io/readers/_xlrd",
]
namespace-packages = ["src/msl"]
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401", # any-type
    "COM812", # missing-trailing-comma
]

[tool.ruff.lint.isort]
known-first-party = ["msl.io"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "D100", # undocumented-public-module
    "D103", # undocumented-public-function
    "INP001", # implicit-namespace-package
    "S101", # Use of `assert` detected
]

[tool.ruff.lint.pydocstyle]
convention = "google"
